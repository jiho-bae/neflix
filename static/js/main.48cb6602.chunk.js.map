{"version":3,"sources":["assets/noPosterSmall.png","api.js","Components/Loader.js","Components/Message.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Section.js","Components/Poster.js","Routes/Home/HomePresenter.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","append_to_response","term","query","tvApi","Container","styled","div","role","aria-label","Text","span","props","color","Message","text","Backdrop","bgImage","Content","Cover","Data","Title","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","loading","error","Helmet","Loader","original_title","original_name","backdrop_path","poster_path","require","default","release_date","substring","first_air_date","runtime","episode_run_time","genres","map","genre","index","length","name","overview","DetailContainer","pathname","location","state","isMovie","includes","a","this","match","push","history","parsedId","parseInt","isNaN","data","console","log","setState","React","Component","Grid","Section","title","children","Image","bgUrl","Rating","ImageContainer","Year","Poster","imageUrl","rating","year","to","HomePresenter","nowPlaying","upComing","popular","movie","vote_average","HomeContainer","results","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","show","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","topRated","airingToday","TVContainer","Header","header","List","ul","li","current","SLink","Link","withRouter","basename","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48cb6602.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"f2f15f6d8fab4331b35b055c29c0e51a\",\n    language: \"ko\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upComing: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0px 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 70%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Neflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : error ? (\n    <Message />\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.original_title ? result.original_title : result.original_name} | Neflix</title>\n      </Helmet>\n      <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}></Backdrop>\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\").default\n          }\n        ></Cover>\n        <Data>\n          <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n          <ItemContainer>\n            <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</Item>\n            <Divider>·</Divider>\n            <Item>{result.runtime ? result.runtime : result.episode_run_time[0]} min </Item>\n            <Divider>·</Divider>\n            <Item>\n              {result.genres && result.genres.map((genre, index) => (index === result.genres.length - 1 ? genre.name : `${genre.name} / `))}{\" \"}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n      console.log(result);\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    console.log(this.state);\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  background-size: cover;\n  background-position: center;\n  border-radius: 4px;\n  height: 180px;\n  transition: opacity 0.2s linear;\n`;\n\nconst Rating = styled.span`\n  position: absolute;\n  bottom: 5px;\n  right: 5px;\n  opacity: 0;\n  transition: opacity 0.2s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/noPosterSmall.png\").default} />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upComing, popular, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Neflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upComing && upComing.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upComing.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upComing: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import { moviesApi } from \"api\";\nimport React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upComing: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upComing },\n      } = await moviesApi.upComing();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upComing,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\n    console.log(this.state);\n    return <HomePresenter nowPlaying={nowPlaying} upComing={upComing} popular={popular} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, loading, error, searchTerm, handleSubmit, updateTerm }) => (\n  <Container>\n    <Helmet>\n      <title>Search | Neflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input placeholder=\"Search Movies or TV Shows...\" value={searchTerm} onChange={updateTerm} />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n          <Message text=\"Nothing found\" color=\"#95a5a6\" />\n        )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  searchTerm: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    error: null,\n    loading: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({ searchTerm: value });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Neflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n                isMovie={false}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import { tvApi } from \"api\";\nimport React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n\n      this.setState({\n        topRated,\n        popular,\n        airingToday,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    console.log(this.state);\n    return <TVPresenter topRated={topRated} popular={popular} airingToday={airingToday} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 9;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  border-bottom: 5px solid ${(props) => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Detail from \"Routes/Detail\";\nimport Home from \"Routes/Home\";\nimport Search from \"Routes/Search\";\nimport TV from \"Routes/TV\";\nimport Header from \"./Header\";\n\nexport default () => (\n  <Router basename=\"https://jiho-bae.github.io/neflix/\">\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body{\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:14px;\n        background-color:rgba(20,20,20,1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default GlobalStyles;\n","import Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}